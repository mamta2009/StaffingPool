<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User List</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body { padding: 20px; }
        .company-section { margin-bottom: 30px; border: 1px solid #ddd; border-radius: 5px; padding: 15px; }
        .company-header { background-color: #f8f9fa; padding: 10px; margin-bottom: 15px; border-radius: 5px; }
        .table th { background-color: #f1f3f5; }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="mb-4">User List</h1>
        
        <% if (currentUser.role === 'System Admin' || currentUser.role === 'Admin') { %>
            <div class="mb-4">
                <a href="/add-user" class="btn btn-success">New User</a>
            </div>
            <div class="add-company-section mb-4">
                <h2>Add New Company</h2>
                <form id="addCompanyForm" class="form-inline">
                    <input type="text" id="companyName" name="companyName" class="form-control mr-2" placeholder="Company Name" required>
                    <button type="submit" class="btn btn-primary">Add Company</button>
                </form>
            </div>
        <% } %>

        <% const groupedUsers = groupUsersByCompany(users); %>
        <% Object.entries(groupedUsers).forEach(([company, companyUsers]) => { %>
            <div class="company-section">
                <div class="company-header d-flex justify-content-between align-items-center">
                    <h2><%= company === 'Unassigned' ? 'IA' : company %></h2>
                    <% if (currentUser.role === 'System Admin' || currentUser.role === 'Admin') { %>
                        <button onclick="editCompany('<%= company %>')" class="btn btn-secondary btn-sm">Edit Company</button>
                    <% } %>
                </div>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Manager</th>
                            <th>Supervisor</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% companyUsers.forEach(user => { %>
                            <tr>
                                <td><%= user.firstName %> <%= user.lastName %></td>
                                <td><%= user.email %></td>
                                <td>
                                    <% if (currentUser.role === 'System Admin' || currentUser.role === 'Admin') { %>
                                        <select onchange="changeRole('<%= user.id %>', this.value)" class="form-control form-control-sm">
                                            <option value="User" <%= user.role === 'User' ? 'selected' : '' %>>User</option>
                                            <option value="Supervisor" <%= user.role === 'Supervisor' ? 'selected' : '' %>>Supervisor</option>
                                            <option value="Manager" <%= user.role === 'Manager' ? 'selected' : '' %>>Manager</option>
                                            <option value="Admin" <%= user.role === 'Admin' ? 'selected' : '' %>>Admin</option>
                                            <% if (currentUser.role === 'System Admin') { %>
                                                <option value="System Admin" <%= user.role === 'System Admin' ? 'selected' : '' %>>System Admin</option>
                                            <% } %>
                                        </select>
                                    <% } else { %>
                                        <%= user.role %>
                                    <% } %>
                                </td>
                                <td><%= getManagerName(user.managerId) %></td>
                                <td><%= getSupervisorName(user.supervisorId) %></td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <% if (currentUser.role === 'System Admin' || currentUser.role === 'Admin') { %>
                                            <button onclick="editUser('<%= user.id %>')" class="btn btn-primary btn-sm">Edit</button>
                                            <button onclick="deleteUser('<%= user.id %>')" class="btn btn-danger btn-sm">Delete</button>
                                        <% } else if (currentUser.id === user.id) { %>
                                            <button onclick="editUser('<%= user.id %>')" class="btn btn-primary btn-sm">Edit Profile</button>
                                        <% } %>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        <% }) %>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        document.getElementById('addCompanyForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const companyName = document.getElementById('companyName').value;
            
            fetch('/add-company', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ companyName }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Company added successfully!');
                    location.reload();
                } else {
                    alert('Error adding company: ' + data.message);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('An error occurred while adding the company');
            });
        });

        function editCompany(company) {
            // Implement edit company logic
            console.log('Edit company:', company);
        }

        function editUser(userId) {
            // Implement edit user logic
            console.log('Edit user:', userId);
        }

        function deleteUser(userId) {
            if (confirm('Are you sure you want to delete this user?')) {
                // Implement delete user logic
                console.log('Delete user:', userId);
            }
        }

        function changeRole(userId, newRole) {
            fetch('/change-role', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ userId, newRole }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Role updated successfully!');
                    location.reload();
                } else {
                    alert('Error changing role: ' + data.message);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('An error occurred while changing the role');
            });
        }
    </script>
</body>
</html>
